apiVersion: v1
kind: ConfigMap
metadata:
  name: backend
  namespace: expense
data:
  DB_HOST: mysql # mysql component service name
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels: # deployment related labels
    component: backend
    project: expense
    tier: app
spec:
  replicas: 2
  selector:
    matchLabels:
     component: backend
     project: expense
     tier: app
  template: #pod definition
    metadata:
      labels:
        component: backend
        project: expense
        tier: app
    spec:
      containers:
      - name: backend
        image: joindevops/backend:v1.0
        envFrom:
        - configMapRef:
            name: backend
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector: # service is going to select a pod where it finds these labels
     component: backend
     project: expense
     tier: app
  ports:
    - protocol: TCP         # UPPERCASE only
      port: 8080            # service-port or clusterIP port
      targetPort: 8080      # port of target container/pod(here-->nginx)
  type: ClusterIP           # Exposes the service internally within the pod n/w
